---
layout: post
title:  "Iterative Closest Point"
date:   2018-09-30 15:00:00 -0200
description: ICP.
permalink: /ICP/
---

#### Usage:

  In SLAM systems, the ICP algorithm is usually used in the front-end, i.e. visual odometry, for 3D-3D pose estimation.

#### Problem Setup:

  Given 2 sets of matched 3D points (assuming that we already matched 2 RGB-D images, details refering to the problem known as *data association / point matching / correspondence finding*):

  $$ \boldsymbol{P} = \{\boldsymbol{p}_1, \boldsymbol{p}_2, \dots, \boldsymbol{p}_n\} $$

  $$ \boldsymbol{P}' = \{\boldsymbol{p}'_1, \boldsymbol{p}'_2, \dots, \boldsymbol{p}'_n\} $$

  We would like to find a transformation $$\boldsymbol{R}$$, $$\boldsymbol{t}$$, such that 

  $$ \forall i, \boldsymbol{p}_i = \boldsymbol{R}\boldsymbol{p}'_i + \boldsymbol{t} $$

  ps. inhomogeneous coordinates are used here and below.

#### Solutions:

  Before diving into the solutions, we should notice that camera model (intrinsic and extrinsic parameters of the camera) is not quite relevant when trying to find the transformation between 2 sets of 3D points. 

  In order to find the desired transformation, we first formulate this problem under the leastsquare manner:

  $$ \boldsymbol{R}^*, \boldsymbol{t}^* = \underset{ \boldsymbol{R}, \boldsymbol{t} } {\mathrm{argmin}} \frac{1}{2} \sum_{i=1}^n \parallel \boldsymbol{p}_i - (\boldsymbol{R}\boldsymbol{p}'_i + \boldsymbol{t})  \parallel^2 $$

  Like any other least square problems, there are 2 methods of finding the optimal transformation: Linear Estimation and Non-Linear Optimization.

  - Linear Estimation

    The most popular linear estimation method is Singular Value Decomposition (SVD). Therefore, some details of SVD are discussed here.

    - SVD

      To Be Added...

    - Reduce the number of parameters

      Optimizing over 2 parameters is more difficult than optimizing over only 1 parameter. Therefore, we first reduce the number parameters in this least square problem.

      By defining the centroids of each set of the points:

      $$ \boldsymbol{p} = \frac{1}{2} \sum_{i=1}^n \boldsymbol{p_i}, \quad \boldsymbol{p}' = \frac{1}{2} \sum_{i=1}^n \boldsymbol{p_i}' $$

      the least square term can now be expressed as:
    
      $$ \parallel \boldsymbol{p_i} - (\boldsymbol{R}\boldsymbol{p_i}' + \boldsymbol{t}) \parallel^2 = \parallel (\boldsymbol{p_i} - \boldsymbol{p}) + \boldsymbol{p} - \boldsymbol{R}(\boldsymbol{p_i}' - \boldsymbol{p}') - \boldsymbol{R}\boldsymbol{p}' - \boldsymbol{t} \parallel^2 $$ 

      after expanding and combining terms in the equation, we have:

      $$ \parallel \boldsymbol{p_i} - (\boldsymbol{R}\boldsymbol{p_i}' + \boldsymbol{t}) \parallel^2 = \parallel \boldsymbol{p_i} - \boldsymbol{p} - \boldsymbol{R}(\boldsymbol{p_i}' - \boldsymbol{p}') \parallel^2 + \parallel \boldsymbol{p} - \boldsymbol{R}\boldsymbol{p}' - \boldsymbol{t} \parallel^2 $$

      let $$ \boldsymbol{q_i} = \boldsymbol{p_i} - \boldsymbol{p}$$, $$ \boldsymbol{q_i}' = \boldsymbol{p_i}' - \boldsymbol{p}' $$, we have

      $$ \underset{ \boldsymbol{R}, \boldsymbol{t} }{\mathrm{argmin}} \frac{1}{2} \sum_{i=1}^n \parallel \boldsymbol{p_i} - (\boldsymbol{R}\boldsymbol{p_i}' + \boldsymbol{t}) \parallel^2 = \underset{ \boldsymbol{R}, \boldsymbol{t} }{\mathrm{argmin}} \frac{1}{2} \sum_{i=1}^n \parallel \boldsymbol{q_i} - \boldsymbol{R}\boldsymbol{q_i}' \parallel^2 + \parallel \boldsymbol{p} - \boldsymbol{R}\boldsymbol{p}' - \boldsymbol{t} \parallel^2 $$

      Noticing that the first term of the R.H.S. is irrelavent of 
      $$ \boldsymbol{t} $$
      , so we can find the 
      $$ \boldsymbol{R}^* $$ 
      by 

      | $$ \boldsymbol{R}^* = \underset{ \boldsymbol{R} }{\mathrm{argmin}} \frac{1}{2} \sum_{i=1}^n \parallel \boldsymbol{q_i} - \boldsymbol{R}\boldsymbol{q_i}' \parallel ^2$$ |
      
      and then calculate 
      $$ \boldsymbol{t}^* $$ 
      by setting the second term to be zero, i.e. 
      
      | $$ \boldsymbol{t}^* = \boldsymbol{p} - \boldsymbol{R}^* \boldsymbol{p}' $$ |

    - Find $$ \boldsymbol{R}^* $$

      Expanding equation $$ \frac{1}{2} \sum_{i=1}^n \parallel \boldsymbol{q_i} - \boldsymbol{R}\boldsymbol{q_i}' \parallel ^2 $$ we have

      $$ \frac{1}{2} \sum_{i=1}^n \boldsymbol{q_i}^T \boldsymbol{q_i} + \boldsymbol{q_i}'^T \boldsymbol{R}^T \boldsymbol{R} \boldsymbol{q_i}' - 2 \boldsymbol{q_i}^T \boldsymbol{R} \boldsymbol{q_i}' $$

      Due to the orthogonality of the rotation matrix, i.e. $$ \boldsymbol{R}^T \boldsymbol{R} = \boldsymbol{I} $$, both the first 2 terms are irrelavant to $$ \boldsymbol{R} $$. Hence the least square problem becomes:

      $$ \boldsymbol{R}^* = \underset{ \boldsymbol{R} }{\mathrm{argmax}} \frac{1}{2} \sum_{i=1}^n \boldsymbol{q_i}^T \boldsymbol{R} \boldsymbol{q_i}' $$

      now we try to isolate $$\boldsymbol{R}$$ out of the summation:

      $$ \sum_{i=1}^n \boldsymbol{q_i}^T \boldsymbol{R} \boldsymbol{q_i}' = tr(\boldsymbol{R} \sum_{i=1}^n \boldsymbol{q_i}' \boldsymbol{q_i}^T) $$


#### Reference:

[1] 高翔；张涛；刘毅；严沁睿: "视觉SLAM十四讲，从理论到实践".

[2] F. Pomerleau, F. Colas, R. Siegwart. "A Review of Point Cloud Registration Algorithms for Mobile Robotics". Foundations and Trends in Robotics. 4 (1): 1–104, 2015.

[3] K. S. Arun, T. S. Huang, and S. D. Blostein. Least-Squares Fitting of Two 3-D Point Sets. Pattern Analysis and Machine Intelligence, IEEE Transactions on, 9(5):698–700, 1987.

[n] S. Rusinkiewicz, M. Levoy. "Efficient Variants of the ICP Algorithm". In Proceedings of the IEEE International Workshop on 3D Digital Imaging and Modeling (3DIM), 2001.


#### Appendix




